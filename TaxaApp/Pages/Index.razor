@page "/"
@using TaxaApp.Kode
@using static TaxaApp.Kode.DistanceMatrix
@using System.Text.Json
@inject GoogleMapsService MapsService
@inject IJSRuntime JSRuntime

<iframe width="1200" height="550" style="border:0" loading="lazy" allowfullscreen
        src="@Taxatur.MapUrl"></iframe>

<h3>Taxa prisudregner</h3>

<div id="map"></div>

<div>
    <label for="StartAdresse">Start destination:</label>
    <input id="StartAdresse" placeholder="Vælg startadresse på kortet" @bind="Taxatur.StartAdresse" />

</div>
<div>
    <label for="SlutAdresse">Slut destination:  </label>
    <input id="SlutAdresse" placeholder="Vælg slutdestination på kortet" @bind="Taxatur.SlutAdresse" @bind:event="onchange" />
</div>

<div>
    <label for="VognType">Vogntype:             </label>
    <select id="VognType" @bind="Taxatur.VognType">
        <option value="Almindelig vogn" default>Almindelig vogn</option>
        <option value="Stor vogn">Stor vogn</option>
        <!-- Tilføj flere biltyper efter behov -->
    </select>
</div>

<div>
    <label for="ValgtTidspunkt">Vælg tidspunkt: </label>
    <input type="datetime-local" id="ValgtTidspunkt" @bind="Taxatur.Tidspunkt" />
</div>

<div>
    <label for="HarCykel">Cykel:</label>
    <input id="HarCykel" type="checkbox" @bind="Taxatur.HarCykel" />
</div>
<div>
    <label for="HarLiftvogn">Liftvogn:</label>
    <input id="HarLiftvogn" type="checkbox" @bind="Taxatur.HarLiftvogn" />
</div>

<button @onclick="UdregnPris">Udregn Pris</button>

<div>
    <span>@Taxatur.DistanceResult</span>
</div>

<div>
    <span>@Taxatur.TimeResult</span>
</div>



@code {
    private Taxatur Taxatur = new Taxatur();
    private PrisUdregner PrisUdregner { get; set; }
    private PrisUdregner.PrisInformation PrisInfo = new PrisUdregner.PrisInformation();

    public Index()
    {
        PrisUdregner = new PrisUdregner();
    }

    private async Task UdregnPris()
    {
        try
        {
           
            var response = await MapsService.GetDistance(Taxatur.StartAdresse, Taxatur.SlutAdresse);

            if (response != null)
            {
               
                var result = JsonSerializer.Deserialize<GoogleMapsDistanceMatrixResponse>(response);

                
                string distance = result?.rows?.FirstOrDefault()?.elements?.FirstOrDefault()?.distance?.text;
                string duration = result?.rows?.FirstOrDefault()?.elements?.FirstOrDefault()?.duration?.text;

                
                double distanceIKm = double.Parse(distance?.Replace(" km", "").Replace(".", ","));
                
                double durationIMin = double.Parse(duration?.Replace(" mins", ""));


                PrisInfo = PrisUdregner.UdregnPris(Taxatur, distanceIKm, durationIMin);

                Taxatur.DistanceResult = distance != null ? $"Afstand: {distance}, Pris: {PrisInfo.TotalPris} DKK" : "";
                Taxatur.TimeResult = duration != null ? $"Tid: {duration}, Pris: {PrisInfo.TotalTidsPris} DKK" : "";

                Taxatur.MapUrl = $"https://www.google.com/maps/embed/v1/directions?key=AIzaSyAMX2xaib8pawKfNoBlzSSFy5tCzo3RI7g&origin={Taxatur.StartAdresse}&destination={Taxatur.SlutAdresse}";

                Console.WriteLine($"Afstand: {distanceIKm} km");
                Console.WriteLine($"StartPris: {PrisInfo.StartPris}");
                Console.WriteLine($"KilometerPris: {PrisInfo.KilometerPris}");
                Console.WriteLine($"MinutPris: {PrisInfo.MinutPris}");
                Console.WriteLine($"TotalPris: {PrisInfo.TotalPris}");
                Console.WriteLine($"TotalPris: {PrisInfo.TotalTidsPris}");
                Console.WriteLine($"Afstand fra API: {distance}");



            }
            else
            {
               
                Console.WriteLine("Fejl: Ugyldigt svar fra API'en.");
  
            }
        }
        catch (Exception ex)
        {
       
            Console.WriteLine($"Fejl: {ex.Message}");

        }
    }
}
