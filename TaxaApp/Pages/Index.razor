@page "/"
@using TaxaApp.Kode
@using static TaxaApp.Kode.DistanceMatrix
@using System.Text.Json
@inject GoogleMapsService MapsService
@inject IJSRuntime JSRuntime


@*<iframe name="iframe_a" width="1200" height="550" style="border:0" loading="lazy" allowfullscreen
    src="https://www.google.com/maps/embed/v1/view?zoom=11&center=55.6761%2C12.5683&key=AIzaSyAMX2xaib8pawKfNoBlzSSFy5tCzo3RI7g"></iframe>*@

<iframe name="iframe_a" width="1200" height="550" style="border:0" loading="lazy" allowfullscreen
        src="@Taxatur.MapUrl"></iframe>


<h3>Taxa prisudregner</h3>

<div id="map"></div>

<div>
    <label for="StartAdresse">Start destination:</label>
    <input id="StartAdresse" placeholder="Vælg startadresse på kortet" @bind="Taxatur.StartAdresse" />

</div>
<div>
    <label for="SlutAdresse">Slut destination:</label>
    <input id="SlutAdresse" placeholder="Vælg slutdestination på kortet" @bind="Taxatur.SlutAdresse" @bind:event="onchange" />
</div>

<div>
    <label for="VognType">Vogntype:</label>
    <select id="VognType" @bind="Taxatur.VognType">
        <option value="Intet valgt">Intet valgt</option>
        <option value="Almindelig vogn">Almindelig vogn</option>
        <option value="Stor vogn">Stor vogn</option>
        <!-- Tilføj flere biltyper efter behov -->
    </select>
</div>

<div>
    <label for="ValgtTidspunkt">Vælg tidspunkt:</label>
    <input type="datetime-local" id="ValgtTidspunkt" @bind="Taxatur.Tidspunkt" />
</div>

<div>
    <label for="HarCykel">Cykel:</label>
    <input id="HarCykel" type="checkbox" @bind="Taxatur.HarCykel" />
</div>
<div>
    <label for="HarLiftvogn">Liftvogn:</label>
    <input id="HarLiftvogn" type="checkbox" @bind="Taxatur.HarLiftvogn" />
</div>

<button @onclick="UdregnPris">Udregn Pris</button>

<div>
    <span>@Taxatur.DistanceResult</span>
</div>

<div>
    <span>@Taxatur.TimeResult</span>
</div>



@code {
    private Taxatur Taxatur = new Taxatur();
    private PrisUdregner PrisUdregner { get; set; }
    private PrisUdregner.PrisInformation PrisInfo = new PrisUdregner.PrisInformation();

    public Index()
    {
        PrisUdregner = new PrisUdregner();
    }

    private async Task UdregnPris()
    {
        try
        {

            var response = await MapsService.GetDistance(Taxatur.StartAdresse, Taxatur.SlutAdresse);

            if (response != null)
            {

                var result = JsonSerializer.Deserialize<GoogleMapsDistanceMatrixResponse>(response);


                double distance = result?.rows?.FirstOrDefault()?.elements?.FirstOrDefault()?.distance?.value ?? 0;
                double duration = result?.rows?.FirstOrDefault()?.elements?.FirstOrDefault()?.duration?.value ?? 0;


                double distanceIKm = distance / 1000;
                double durationIMin = duration / 60;


                PrisInfo = PrisUdregner.UdregnPris(Taxatur, distanceIKm, durationIMin);

                Taxatur.DistanceResult = distance != null ? $"Afstand: {distanceIKm:N1} km - Pris: {PrisInfo.TotalPris:N0} DKK" : "";
                Taxatur.TimeResult = duration != null ? $"Tid: {durationIMin:N0} min - Pris: {PrisInfo.TotalTidsPris:N0} DKK" : "";

                Taxatur.MapUrl = $"https://www.google.com/maps/embed/v1/directions?key=AIzaSyAMX2xaib8pawKfNoBlzSSFy5tCzo3RI7g&origin={Taxatur.StartAdresse}&destination={Taxatur.SlutAdresse}";

                Console.WriteLine($"Afstand: {distanceIKm} km");
                Console.WriteLine($"Afstand: {durationIMin} min");
                Console.WriteLine($"StartPris: {PrisInfo.StartPris}");
                Console.WriteLine($"Cykel: {Taxatur.HarCykel}");
                Console.WriteLine($"Liftvogn: {Taxatur.HarLiftvogn}");
                Console.WriteLine($"KilometerPris: {PrisInfo.KilometerPris}");
                Console.WriteLine($"MinutPris: {PrisInfo.MinutPris}");
                Console.WriteLine($"TotalPris i km: {PrisInfo.TotalPris}");
                Console.WriteLine($"TotalPris i min: {PrisInfo.TotalTidsPris}");
                Console.WriteLine($"Afstand fra API: {distance} km");
                Console.WriteLine($"Afstand fra API: {duration} min");

            }
            else
            {

                Console.WriteLine("Fejl: Ugyldigt svar fra API'en.");

            }
        }
        catch (Exception ex)
        {

            Console.WriteLine($"Fejl: {ex.Message}");

        }
    }
}
